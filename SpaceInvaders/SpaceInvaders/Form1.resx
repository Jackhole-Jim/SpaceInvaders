<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>93</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABLBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAABBJJ
        REFUeNrt3bFuHFUUx+EDspMmASIeIfAO0FCAEDTQIgQdFQ9mCngFiFIgXgLzCkSQSBFJhKlIe681d+/c
        2f/3uR3tnBn/7F1Lu8dVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJzEG3sPUFVVF3WvecyzerX3
        mOd4RRd7D1BVVR/Vj81jvqpf9h7zHK9ojQDu1rsdxxzJYa7ozb0HqKqqfwcds47DXNEaAbAbAYQTQDgB
        hBNAOAGEE0A4AYQTQDgBhBNAOAGEE0C4NQK403HM872HvJWeaXuu+uTWeEfQw/q2ecxN84jr+mHSvF/X
        +40jeu7rVV1PmvcsPKqbxtdv02b5tTnL471vV681ngJ6tH+p/jVtlvaZDvOEdZwAOAkBhBNAOAGEE0A4
        AYQTQDgBhBNAOAGEE0A4AYQTQLjjBND+MPW8j1uvNMtGayyI6Fmo0l6ncLfemTTvmFmWWBGzxjuCPu5Y
        qHK/+RaqF/V00rxjZrEi5rWehSptd4Y8yhg9s1gR89phnjHP76rXCIDdCCCcAMIJIJwAwgkgnADCCSCc
        AMIJIJwAwgkgnADCrRHAvE/2r2SJq57xfoD2QpX3Oh7lqn5vPkp70cwYY2b5vj5tHDFv6c1JtReq9Hx9
        2DzPB0POs9IsE5bezHgKGPOr7u0BR4wya5YJTxJrvAZgNwIIJ4BwAggngHACCCeAcAIIJ4BwAggngHAC
        CCeAcDMCGPMx6JcDjhhl1iwTPkC+9Q0hY5a79HjQXLryYMh5VpplwqKZrStixix36fF386fqst4acJ6V
        ZpmwaGbrb4Axy116zPrmrjTLhEUzW18DLLHmJNrG74C/AsIJIJwAwgkgnADCCSCcAMIJIJwAwgkgnADC
        CSCcAMIJINyMFTErLXdZyVncl88WWqhytK8x9+Xzbd/AGU8BKy13WckS98VrgHACCCeAcAIIJ4BwAggn
        gHACCCeAcAIIJ4BwAggngHACCDfjDSFjPJ24A2i7y7q/9wh9jhPAd/Xz3iPcwif1094j9DlOAH/Wk71H
        uNW0B3Gc1wCXew9wntMeJwBOQgDhBBBOAOEEEE4A4QQQTgDhBBBOAOEEEE4A4QQQbmsAPf8Mpn1Mz6M8
        n3E7humZdsx92fjveLb+z6CHHUtMrup6wKPcbJz0/1n+aM7yzYDz9NzXMfel/Shn4tGQtSxfNs/zxZDz
        PN77dvU6zmuAMU8BLwYcMW/aCY4TACchgHACCCeAcAIIJ4BwAggngHACCCeAcAIIJ4BwAgh3nADGfOC6
        fb1j7shhPh5+nAURT4YsXfin44gR5znMMout7wia596Qn6qn9apxxMWQ7T4v69mEewIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADAuv4DYGDnlcGMdP4AAAAASUVORK5CYII=
</value>
  </data>
</root>